[tool.poetry]
name = "lm-format-enforcer"
version = "0.9.3"
description = "Enforce the output format (JSON Schema, Regex etc) of a language model"
authors = ["Noam Gat <noamgat@gmail.com>"]
license = "MIT"
readme = "README.md"
homepage = "https://github.com/noamgat/lm-format-enforcer"
repository = "https://github.com/noamgat/lm-format-enforcer"
documentation = "https://github.com/noamgat/lm-format-enforcer"
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "Operating System :: OS Independent",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3 :: Only",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "License :: OSI Approved :: MIT License",
    "Topic :: Software Development :: Libraries :: Python Modules",
]
packages = [
    { include = "lmformatenforcer" },
]

[tool.poetry.urls]
"Bug Tracker" = "https://github.com/noamgat/lm-format-enforcer/issues"

[tool.poetry.dependencies]
python = ">=3.8,<4.0"
pydantic = ">=1.10.8"
interegular = ">=0.3.2"
packaging = "*"
pyyaml = "*"

[tool.poetry.group.dev.dependencies]
mock = "5.1.0"
pre-commit = {version = "3.0.0", python = ">=3.8"}
flake8 = {version = "6.0.0", python = ">=3.8.1"}
flake8-bugbear = {version = "23.3.23", python = ">=3.8.1"}
liccheck = "0.9.1"
isort = {version = "5.12.0", python = ">=3.8"}
pep8-naming = {version = "0.13.3", python = ">=3.8"}
tox = {version = "4.11.3", python = ">=3.8"}

[tool.poetry.group.format.dependencies]
black = {version = "23.7.0", python = ">=3.8"}

[tool.poetry.group.types.dependencies]
mypy = {version = "1.5.1", python = ">=3.8"}
types-requests = "2.31.0.2"
types-setuptools = "68.1.0.1"

[tool.poetry.group.tests.dependencies]
pytest = {version = "6.2.5", python = ">=3.8"}
coverage = {version = "^7.3.1", python = ">=3.8", extras = ["toml"]}
transformers = ">=4.28.1"
torch = {version = "^2.1.0+cpu", source = "pytorch"}
numpy = "^1.21.0"

[tool.poetry.group.samples.dependencies]
Flask = {version = "2.3.2", python = ">=3.8"}
transformers = ">=4.28.1"
tokenizers = ">=0.13.3"


[[tool.poetry.source]]
name = "pytorch"
url = "https://download.pytorch.org/whl/cpu"
priority = "explicit"

[build-system]
requires = ["poetry-core>=1.1.0"]
build-backend = "poetry.core.masonry.api"

[tool.coverage.run]
relative_files = true
source = ["lmformatenforcer"]

[tool.coverage.report]
fail_under = 50
skip_covered = true
skip_empty = true

[tool.isort]
profile = "black"

[tool.flake8]
per-file-ignores = "__init__.py:F401"
ignore = "E501,N818,W503"
